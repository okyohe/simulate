{"ast":null,"code":"import Vue from 'vue';\nimport Buefy from 'buefy';\nimport 'buefy/dist/buefy.css';\nVue.use(Buefy);\nexport default {\n  name: 'SimulateSavings',\n  props: {\n    msg: String\n  },\n\n  data() {\n    return {\n      value: 5,\n      deer_numbers: 150,\n      average_weight: 60,\n      garbage_ratio: 0.7,\n      ingridient_ratio: 0.5,\n      unitcost_garbage: 35,\n      gas_type: \"city\",\n      unitcost_citygas: 250,\n      unitcost_propangas: 690,\n      is_generate: false,\n      SimulatedSavings: false,\n      amount_gas: false,\n      gabage_amount: false,\n      ingridient_amount: false,\n      allcost_garbage: false,\n      SimulatedSavingGarbageCost: false,\n      SimulatedSavingsPropangasCost: false,\n      SimulatedSavingsCitygasCost: false\n    };\n  },\n\n  computed() {},\n\n  methods: {\n    clickMe() {\n      this.$buefy.notification.open('Clicked!!');\n    },\n\n    simulate() {\n      this.is_generate = false;\n      this.gabage_amount = this.deer_numbers * this.average_weight * this.garbage_ratio;\n      this.ingridient_amount = this.deer_numbers * this.average_weight * this.ingridient_ratio;\n      this.allcost_garbage = this.gabage_amount * this.unitcost_garbage;\n      this.amount_gas = this.ingridient_amount * 0.3 * 1000 * 0.8 * 0.527 / 1000; //(m3) \n\n      this.SimulatedSavingGarbageCost = this.allcost_garbage * this.ingridient_ratio;\n      this.SimulatedSavingsPropangasCost = this.amount_gas * this.unitcost_propangas;\n      this.SimulatedSavingsCitygasCost = this.amount_gas * this.unitcost_citygas;\n\n      if (this.gas_type == \"city\") {\n        this.SimulatedSavingsEnergyCost = this.SimulatedSavingsCitygasCost.toLocaleString();\n        this.is_generate = true;\n      } else if (this.gas_type == \"propan\") {\n        this.SimulatedSavingsEnergyCost = this.SimulatedSavingsPropangasCost.toLocaleString();\n        this.is_generate = true;\n      } else {\n        this.SimulatedSavingsEnergyCost = \"大変申し訳ございません。エラーが発生しました。\";\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqDA;AACA;AACA;AAEAA;AAEA;EACAC,uBADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC,QADA;MAEAC,iBAFA;MAGAC,kBAHA;MAIAC,kBAJA;MAKAC,qBALA;MAMAC,oBANA;MAOAC,gBAPA;MAQAC,qBARA;MASAC,uBATA;MAUAC,kBAVA;MAWAC,uBAXA;MAYAC,iBAZA;MAaAC,oBAbA;MAcAC,wBAdA;MAeAC,sBAfA;MAgBAC,iCAhBA;MAiBAC,oCAjBA;MAkBAC;IAlBA;EAqBA,CA3BA;;EA4BAC,YAEA,CA9BA;;EA+BAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;MACA;MACA;MACA;MACA,2EALA,CAKA;;MACA;MACA;MACA;;MAGA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA,CAHA,MAGA;QACA;MACA;IAEA;;EAzBA;AA/BA","names":["Vue","name","props","msg","data","value","deer_numbers","average_weight","garbage_ratio","ingridient_ratio","unitcost_garbage","gas_type","unitcost_citygas","unitcost_propangas","is_generate","SimulatedSavings","amount_gas","gabage_amount","ingridient_amount","allcost_garbage","SimulatedSavingGarbageCost","SimulatedSavingsPropangasCost","SimulatedSavingsCitygasCost","computed","methods","clickMe","simulate"],"sourceRoot":"src/components","sources":["SimulateSavings.vue"],"sourcesContent":["<template>\n  <div class=\"simulate\">\n    \n    \n      <b-field label=\"年間処理頭数（頭/年）\" >\n          <b-input type=\"number\" v-model=\"deer_numbers\"></b-input>\n      </b-field>      \n      \n      <b-field label=\"一頭当たり平均重量（kg/年）\" >\n          <b-input type=\"number\" v-model=\"average_weight\"></b-input>\n      </b-field> \n      <section class=\"ingridient_ratio\">\n        <b-field label=\"一頭当たりの廃棄量の割合（％）\">\n            <b-slider v-model=\"garbage_ratio\"></b-slider>\n        </b-field>\n        \n        <b-field label=\"一頭当たりの投入可能内臓量の割合（％）\">\n            <b-slider v-model=\"ingridient_ratio\"></b-slider>\n        </b-field>      \n      </section>   \n      \n      <b-field label=\"廃棄単価（円/kg）\">\n        <b-input type=\"number\" v-model=\"unitcost_garbage\"></b-input>\n      </b-field> \n      <div class=\"block\">\n            <b-radio v-model=\"gas_type\">\n                都市ガス\n            </b-radio>\n            <b-radio v-model=\"gas_type\">\n                プロパンガス\n            </b-radio>        \n        </div>\n   \n      \n      <b-field label=\"プロパンガス単位料金\" v-show=\"gas_type=='propan'\">\n        <b-input type=\"number\" v-model=\"unitcost_propangas\"></b-input>\n      </b-field>\n      <b-field label=\"都市ガス単位料金\" v-show=\"gas_type=='city'\">\n        <b-input type=\"number\" v-model=\"unitcost_citygas\"></b-input>\n      </b-field>      \n      <b-button @click=\"simulate\" type=\"is-primary\">計算する</b-button>\n      <b-message \n            title=\"節約できる金額\" \n            type=\"is-success\" \n            aria-close-label=\"結果を消す\"\n            v-show=\"is_generate\">\n            ”シカくん初号機”を導入することで節約できる光熱費は 約{{SimulatedSavingsEnergyCost}}円です。※概算になるため、詳しいお見積りはヒアリング後にさせて頂きます。\n            <b-button @click=\"contact\" type=\"is-success\">お問い合わせはこちら</b-button>\n        </b-message>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Buefy from 'buefy'\nimport 'buefy/dist/buefy.css'\n\nVue.use(Buefy)\n\nexport default {\n  name: 'SimulateSavings',\n  props: {\n    msg: String,    \n  },\n  data() {\n            return {\n                value: 5,\n                deer_numbers:150,\n                average_weight:60,\n                garbage_ratio:0.7,\n                ingridient_ratio:0.5,\n                unitcost_garbage:35,\n                gas_type: \"city\",\n                unitcost_citygas: 250,\n                unitcost_propangas: 690,\n                is_generate:false,\n                SimulatedSavings:false,\n                amount_gas:false,\n                gabage_amount:false,\n                ingridient_amount:false,\n                allcost_garbage:false,\n                SimulatedSavingGarbageCost:false,\n                SimulatedSavingsPropangasCost:false,\n                SimulatedSavingsCitygasCost:false\n\n            }\n        },\n  computed(){\n      \n  },\n  methods : {\n      clickMe() {\n          this.$buefy.notification.open('Clicked!!')\n      },\n      simulate(){\n        this.is_generate = false;\n        this.gabage_amount = this.deer_numbers * this.average_weight * this.garbage_ratio;\n        this.ingridient_amount = this.deer_numbers * this.average_weight * this.ingridient_ratio;\n        this.allcost_garbage = this.gabage_amount * this.unitcost_garbage;\n        this.amount_gas = this.ingridient_amount * 0.3 * 1000 * 0.8 * 0.527 / 1000 //(m3) \n        this.SimulatedSavingGarbageCost = this.allcost_garbage * this.ingridient_ratio;\n        this.SimulatedSavingsPropangasCost = this.amount_gas * this.unitcost_propangas;\n        this.SimulatedSavingsCitygasCost = this.amount_gas * this.unitcost_citygas;\n        \n        \n        if(this.gas_type==\"city\"){\n          this.SimulatedSavingsEnergyCost = this.SimulatedSavingsCitygasCost.toLocaleString();          \n          this.is_generate = true;\n        }else if(this.gas_type==\"propan\"){\n          this.SimulatedSavingsEnergyCost = this.SimulatedSavingsPropangasCost.toLocaleString();\n          this.is_generate = true;\n        }else{\n          this.SimulatedSavingsEnergyCost = \"大変申し訳ございません。エラーが発生しました。\"\n        }\n        \n      }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.simulate{\n  margin: auto 2rem;\n  \n  \n}\n.ingridient_ratio{\n  display: none\n}\nh3 {\n  margin: 2rem 0 3rem;\n  font-weight: bold;\n  font-size: 2rem;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.button{\n  margin:1rem auto\n}\n@media (min-width: 824px) {\n  .simulate{\n    width: 70%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    margin: auto;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}